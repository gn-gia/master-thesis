# setwd("C:/Users/gngia/OneDrive/Documents/new obis")

# Unicode <- https://symbl.cc/en/unicode-table/#latin-1-supplement

library(robis)
library(dplyr)
library(ggplot2)
library(maps)
library(sf)
library(sp)
library(robis)
library(kableExtra)
library(worrms)
library(scales)
library(tidyverse)
library(cowplot)
library(units)
library(viridis)
library(openxlsx)
library(terra)

# Occurrence Data: WKT string delimits polygon excluding Svalbard and Jan Mayen; Norway = 179
library("dplyr")
library("ggplot2")
library("robis")
o <- occurrence(areaid = "179", mof = TRUE, geometry = "POLYGON ((34.4004 70.2535, 30.5332 71.2047, 26.5254 71.5416, 22.1660 71.2500,
           19.5645 70.7695, 16.5410 70.1344, 13.4473 69.0560, 11.1973 67.7361, 12.5332 67.3060, 
           11.4082 66.3939, 9.8613 65.4765, 8.4551 64.7666, 6.9785 63.9451, 5.0098 62.9072,
           3.5332 61.9968, 3.5332 58.3279, 7.2598 57.2790, 11.0567 58.4017, 12.4629 59.0948, 11.3379 60.6473,
           8.6660 60.5783, 8.3145 62.2924, 16.3301 65.6220, 17.2442 67.6293, 20.1973 68.7523,
           23.9238 69.6998, 26.5254 70.1344, 29.5488 69.5284, 32.2910 69.4051, 34.4004 70.2535))") # Ran 20.05.2024 @911,521 occ records

unique(o$kingdom)

# Filter rows based on the specified conditions
filtered_data <- o %>%
  filter(kingdom %in% c("Animalia", "Plantae", "Chromista", NA))
View(filtered_data)

# Remove class Aves from dataset
filtered_data1 <- filtered_data %>%
  filter(!(class == "Aves"))
View(filtered_data1)

# Transform to sf object and set crs (EPSG:4326, WGS84)
occ_sf <- st_as_sf(filtered_data1, coords = c("decimalLongitude", "decimalLatitude"))
occ_sf <- st_set_crs(occ_sf, "EPSG:4326")
print(st_crs(occ_sf))

# Add the original coordinate columns back to the sf object
occ_sf$decimalLongitude <- filtered_data1$decimalLongitude
occ_sf$decimalLatitude <- filtered_data1$decimalLatitude
print(class(occ_sf))

# Read the shapefile into an sf object and set crs (EPSG:4326, WGS84)
#shp <- st_read("C:/Users/gngia/OneDrive/Documents/new obis/GIS/Kommuner_Fylker_Intersect.shp", stringsAsFactors=FALSE)
#shp <- st_transform(shp, crs = "EPSG:4326")
#print(shp1 <- st_crs(shp))
#class(shp) # Shape_Area is in meters

# Plot shapefile with occurrence data
ggplot() +
  geom_sf(data = shp) +
  geom_sf(data = occ_sf, color = "green", size = 1) +
  theme_bw()

# Read the shapefile into an sf object and set crs (EPSG:4326, WGS84)
# Shapefile clip with county and is only territorial waters
shp2 <- st_read("C:/Users/gngia/OneDrive/Documents/new obis/GIS/new_Fylker_Int_Terrw.shp", stringsAsFactors=FALSE)
shp2 <- st_transform(shp2, crs = "EPSG:4326") # km.sq.
print(shp3 <- st_crs(shp2))
class(shp2)

# Plot shapefile2 with occurrence data
ggplot() +
  geom_sf(data = shp2, fill = "black") +
  geom_sf(data = occ_sf, color = "pink", size = 1) +
  theme_bw()

# Perform a spatial join
map_occ_joined_clip1 <- st_join(occ_sf, shp2)
class(map_occ_joined_clip1)
View(map_occ_joined_clip1)

# Group by 'FYLKESNAVN' and count distinct 'originalScientificName'
map_occ__with_clip1 <- map_occ_joined_clip1 %>%
  group_by(FYLKESNAVN) %>%
  summarize(species_count = n_distinct(originalScientificName))
View(map_occ_joined_clip1)

map_occ_joined_clip2 <- map_occ_joined_clip1 %>%
  group_by(FYLKESNAVN, aphiaID, originalScientificName, family, class, phylum, kingdom, area_fylk, basisOfRecord, year, decimalLongitude, decimalLatitude, depth,) %>%
  summarize(occurrences = n())
View(map_occ_joined_clip2)

sum(map_occ_joined_clip2$occurrences) # 563,738

# Plot the join
ggplot() +
  geom_sf(data = shp) +
  geom_sf(data = shp2) +
  geom_sf(data = map_occ_joined_clip2, aes(color = occurrences), size = 0.25) +
  theme_bw()

#Intersect joined data with shp2 (leaves only occurrences within 12nm of the coast)
intersect3 <- st_intersection(map_occ_joined_clip2, shp2)
View(intersect3)
class(intersect3) # sf, tbl_df, tbl, data.frame

sum(intersect3$occurrences) # 136,942

# Plot the intersection 
ggplot() +
  geom_sf(data = shp) +
  geom_sf(data = shp2, color = "gold", size = 0.2, fill = NA) +
  geom_sf(data = intersect3, aes(color = occurrences), size = 1, fill = NA) +
  theme_bw()

unique(intersect3$FYLKESNAVN)

####################### TROMS #######################################
# Filter shp2 to include only the geometry for the county of interest
shp2_troms <- shp2[shp2$FYLKESNAVN == "\"Troms - Romsa - Tromssa\"", ]
intersect3_troms <- intersect3 %>%
  filter(FYLKESNAVN == "\"Troms - Romsa - Tromssa\"",)

# Reorder based on occurrences (stacked lowest to highest)
intersect3_troms <- intersect3_troms[order(intersect3_troms$occurrences), ]

# Plot with labels, adjusted point parameters, and reordered data
troms_map <- ggplot() +
  geom_sf(data = shp2_troms, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_troms, aes(color = occurrences), size = 2.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # Continuous color scale with magma
  ggtitle("Troms") +
  theme_bw() +
  theme(axis.title.x = element_blank(),  # Remove x-axis title
        axis.title.y = element_blank(),  # Remove y-axis title
        plot.title.position = "panel",  # Position the title centered above the plot
        plot.title = element_text(hjust = 0.5))  # Center the title text

print(troms_map)

sum(intersect3_troms$occurrences)
unique(intersect3_troms$originalScientificName)

# CREATE GRID
# Reproject shp2_troms to UTM zone 32N
shp2_troms_utm <- st_transform(shp2_troms, crs = 25833)

# Create fishnet function
create_fishnet <- function(bbox, cell_size) {
  x_coords <- seq(bbox["xmin"], bbox["xmax"], by = cell_size)
  y_coords <- seq(bbox["ymin"], bbox["ymax"], by = cell_size)
  
  # Ensure the grid covers the entire extent
  if (tail(x_coords, 1) < bbox["xmax"]) x_coords <- c(x_coords, bbox["xmax"])
  if (tail(y_coords, 1) < bbox["ymax"]) y_coords <- c(y_coords, bbox["ymax"])
  
  grid <- expand.grid(x = x_coords, y = y_coords)
  grid_sf <- st_as_sf(grid, coords = c("x", "y"), crs = st_crs(shp2_troms_utm))
  
  fishnet <- st_make_grid(grid_sf, cellsize = c(cell_size, cell_size), square = TRUE)
  fishnet_sf <- st_sf(geometry = fishnet)
  return(fishnet_sf)
}

# Create a fishnet grid of 2km by 2km over the extent of shp2_troms in UTM
bbox_utm <- st_bbox(shp2_troms_utm)
cell_size <- 5000  # 2km

fishnet_sf_utm <- create_fishnet(bbox_utm, cell_size)

# Optionally, reproject the fishnet back to the original CRS
fishnet_sf <- st_transform(fishnet_sf_utm, crs = st_crs(shp2_troms))

# Plot with ggplot2
fishnet_troms_map <- ggplot() +
  geom_sf(data = shp2_troms_utm, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_troms, aes(color = occurrences), size = 1.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  
  # Add the fishnet grid with black outlines
  geom_sf(data = fishnet_sf, fill = NA, color = "black", size = 0.2) +
  
  ggtitle("Troms") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(fishnet_troms_map)

####################### AKERSHUS #######################################
# Filter shp2 to include only the geometry for the county of interest
shp2_akershus <- shp2[shp2$FYLKESNAVN == "Akershus", ]
intersect3_akershus <- intersect3 %>%
  filter(FYLKESNAVN == "Akershus",)

# Reorder based on occurrences (stacked lowest to highest)
intersect3_akershus <- intersect3_akershus[order(intersect3_akershus$occurrences), ]

# Plot with labels
akershus_map <- ggplot() +
  geom_sf(data = shp2_akershus, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_akershus, aes(color = occurrences), size = 2.5, fill = NA) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  ggtitle("Akershus") +
  theme_bw() +
  theme(axis.title.x = element_blank(),  # Remove x-axis title
        axis.title.y = element_blank(),  # Remove y-axis title
        plot.title.position = "panel",  # Position the title centered above the plot
        plot.title = element_text(hjust = 0.5))  # Center the title text

print(akershus_map)

sum(intersect3_akershus$occurrences)
unique(intersect3_akershus$originalScientificName)

# CREATE GRID
# Reproject shp2_akershus to UTM zone 32N
shp2_akershus_utm <- st_transform(shp2_akershus, crs = 25833)

# Create fishnet function
create_fishnet <- function(bbox, cell_size) {
  x_coords <- seq(bbox["xmin"], bbox["xmax"], by = cell_size)
  y_coords <- seq(bbox["ymin"], bbox["ymax"], by = cell_size)
  
  # Ensure the grid covers the entire extent
  if (tail(x_coords, 1) < bbox["xmax"]) x_coords <- c(x_coords, bbox["xmax"])
  if (tail(y_coords, 1) < bbox["ymax"]) y_coords <- c(y_coords, bbox["ymax"])
  
  grid <- expand.grid(x = x_coords, y = y_coords)
  grid_sf <- st_as_sf(grid, coords = c("x", "y"), crs = st_crs(shp2_akershus_utm))
  
  fishnet <- st_make_grid(grid_sf, cellsize = c(cell_size, cell_size), square = TRUE)
  fishnet_sf <- st_sf(geometry = fishnet)
  return(fishnet_sf)
}

# Create a fishnet grid of 2km by 2km over the extent of shp2_akershus in UTM
bbox_utm <- st_bbox(shp2_akershus_utm)
cell_size <- 2000  # 2km

fishnet_sf_utm <- create_fishnet(bbox_utm, cell_size)

# Optionally, reproject the fishnet back to the original CRS
fishnet_sf <- st_transform(fishnet_sf_utm, crs = st_crs(shp2_akershus))

# Plot with ggplot2
fishnet_akershus_map <- ggplot() +
  geom_sf(data = shp2_akershus_utm, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_akershus, aes(color = occurrences), size = 1.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  
  # Add the fishnet grid with black outlines
  geom_sf(data = fishnet_sf, fill = NA, color = "black", size = 0.2) +
  
  ggtitle("Akershus") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(fishnet_akershus_map)

####################### MØRE OG ROMSDAL #######################################
# Filter shp2 to include only the geometry for the county of interest
shp2_moere <- shp2[shp2$FYLKESNAVN == "\"M\u00F8re og Romsdal\"", ]
intersect3_moere <- intersect3 %>%
  filter(FYLKESNAVN == "\"M\u00F8re og Romsdal\"",)

# Reorder based on occurrences (stacked lowest to highest)
intersect3_moere <- intersect3_moere[order(intersect3_moere$occurrences), ]

moere_map <- ggplot() +
  geom_sf(data = shp2_moere, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_moere, aes(color = occurrences), size = 2.5, fill = NA) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  ggtitle("M\u00F8re og Romsdal") +
  theme_bw()+
  theme(axis.title.x = element_blank(),  # Remove x-axis title
        axis.title.y = element_blank(),  # Remove y-axis title
        plot.title.position = "panel",  # Position the title centered above the plot
        plot.title = element_text(hjust = 0.5))  # Center the title text

print(moere_map)

sum(intersect3_moere$occurrences)
unique(intersect3_moere$originalScientificName)

# CREATE GRID
# Reproject shp2_moere to UTM zone 32N
shp2_moere_utm <- st_transform(shp2_moere, crs = 25833)

# Create fishnet function
create_fishnet <- function(bbox, cell_size) {
  x_coords <- seq(bbox["xmin"], bbox["xmax"], by = cell_size)
  y_coords <- seq(bbox["ymin"], bbox["ymax"], by = cell_size)
  
  # Ensure the grid covers the entire extent
  if (tail(x_coords, 1) < bbox["xmax"]) x_coords <- c(x_coords, bbox["xmax"])
  if (tail(y_coords, 1) < bbox["ymax"]) y_coords <- c(y_coords, bbox["ymax"])
  
  grid <- expand.grid(x = x_coords, y = y_coords)
  grid_sf <- st_as_sf(grid, coords = c("x", "y"), crs = st_crs(shp2_moere_utm))
  
  fishnet <- st_make_grid(grid_sf, cellsize = c(cell_size, cell_size), square = TRUE)
  fishnet_sf <- st_sf(geometry = fishnet)
  return(fishnet_sf)
}

# Create a fishnet grid of 5km over the extent of shp2_moere in UTM
bbox_utm <- st_bbox(shp2_moere_utm)
cell_size <- 5000  # 5km

fishnet_sf_utm <- create_fishnet(bbox_utm, cell_size)

# Optionally, reproject the fishnet back to the original CRS
fishnet_sf <- st_transform(fishnet_sf_utm, crs = st_crs(shp2_moere))

# Plot with ggplot2
fishnet_moere_map <- ggplot() +
  geom_sf(data = shp2_moere_utm, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_moere, aes(color = occurrences), size = 1.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  
  # Add the fishnet grid with black outlines
  geom_sf(data = fishnet_sf, fill = NA, color = "black", size = 0.2) +
  
  ggtitle("M\u00F8re og Romsdal") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(fishnet_moere_map)

####################### ØSTFOLD #######################################
# Filter shp2 to include only the geometry for the county of interest
shp2_oestfold <- shp2[shp2$FYLKESNAVN == "\u00D8stfold", ]
intersect3_oestfold <- intersect3 %>%
  filter(FYLKESNAVN == "\u00D8stfold",)

# Reorder based on occurrences (stacked lowest to highest)
intersect3_oestfold <- intersect3_oestfold[order(intersect3_oestfold$occurrences), ]

oestfold_map <- ggplot() +
  geom_sf(data = shp2_oestfold, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_oestfold, aes(color = occurrences), size = 2.5, fill = NA) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  ggtitle("\u00D8stfold") +
  theme_bw() +
  theme(axis.title.x = element_blank(),  # Remove x-axis title
        axis.title.y = element_blank(),  # Remove y-axis title
        plot.title.position = "panel",  # Position the title centered above the plot
        plot.title = element_text(hjust = 0.5))  # Center the title text

print(oestfold_map)

sum(intersect3_oestfold$occurrences)
unique(intersect3_oestfold$originalScientificName)

# CREATE GRID
# Reproject shp2_oestfold to UTM zone 32N
shp2_oestfold_utm <- st_transform(shp2_oestfold, crs = 25833)

# Create fishnet function
create_fishnet <- function(bbox, cell_size) {
  x_coords <- seq(bbox["xmin"], bbox["xmax"], by = cell_size)
  y_coords <- seq(bbox["ymin"], bbox["ymax"], by = cell_size)
  
  # Ensure the grid covers the entire extent
  if (tail(x_coords, 1) < bbox["xmax"]) x_coords <- c(x_coords, bbox["xmax"])
  if (tail(y_coords, 1) < bbox["ymax"]) y_coords <- c(y_coords, bbox["ymax"])
  
  grid <- expand.grid(x = x_coords, y = y_coords)
  grid_sf <- st_as_sf(grid, coords = c("x", "y"), crs = st_crs(shp2_oestfold_utm))
  
  fishnet <- st_make_grid(grid_sf, cellsize = c(cell_size, cell_size), square = TRUE)
  fishnet_sf <- st_sf(geometry = fishnet)
  return(fishnet_sf)
}

# Create a fishnet grid of 2km over the extent of shp2_oestfold in UTM
bbox_utm <- st_bbox(shp2_oestfold_utm)
cell_size <- 2000  # 2km

fishnet_sf_utm <- create_fishnet(bbox_utm, cell_size)

# Optionally, reproject the fishnet back to the original CRS
fishnet_sf <- st_transform(fishnet_sf_utm, crs = st_crs(shp2_oestfold))

# Plot with ggplot2
fishnet_oestfold_map <- ggplot() +
  geom_sf(data = shp2_oestfold_utm, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_oestfold, aes(color = occurrences), size = 1.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  
  # Add the fishnet grid with black outlines
  geom_sf(data = fishnet_sf, fill = NA, color = "black", size = 0.2) +
  
  ggtitle("\u00D8stfold") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(fishnet_oestfold_map)

####################### VESTLAND #######################################
# Filter shp2 to include only the geometry for the county of interest
shp2_vestland <- shp2[shp2$FYLKESNAVN == "Vestland", ]
intersect3_vestland <- intersect3 %>%
  filter(FYLKESNAVN == "Vestland",)

# Reorder based on occurrences (stacked lowest to highest)
intersect3_vestland <- intersect3_vestland[order(intersect3_vestland$occurrences), ]

# Plot with labels
vestland_map <- ggplot() +
  geom_sf(data = shp2_vestland, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_vestland, aes(color = occurrences), size = 2.5, fill = NA) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  ggtitle("Vestland") +
  theme_bw() +
  theme(axis.title.x = element_blank(),  # Remove x-axis title
        axis.title.y = element_blank(),  # Remove y-axis title
        plot.title.position = "panel",  # Position the title centered above the plot
        plot.title = element_text(hjust = 0.5))  # Center the title text

print(vestland_map)

sum(intersect3_vestland$occurrences)
unique(intersect3_vestland$originalScientificName)

# CREATE GRID
# Reproject shp2_vestland to UTM zone 32N
shp2_vestland_utm <- st_transform(shp2_vestland, crs = 25833)

# Create fishnet function
create_fishnet <- function(bbox, cell_size) {
  x_coords <- seq(bbox["xmin"], bbox["xmax"], by = cell_size)
  y_coords <- seq(bbox["ymin"], bbox["ymax"], by = cell_size)
  
  # Ensure the grid covers the entire extent
  if (tail(x_coords, 1) < bbox["xmax"]) x_coords <- c(x_coords, bbox["xmax"])
  if (tail(y_coords, 1) < bbox["ymax"]) y_coords <- c(y_coords, bbox["ymax"])
  
  grid <- expand.grid(x = x_coords, y = y_coords)
  grid_sf <- st_as_sf(grid, coords = c("x", "y"), crs = st_crs(shp2_vestland_utm))
  
  fishnet <- st_make_grid(grid_sf, cellsize = c(cell_size, cell_size), square = TRUE)
  fishnet_sf <- st_sf(geometry = fishnet)
  return(fishnet_sf)
}

# Create a fishnet grid of shp2_vestland in UTM
bbox_utm <- st_bbox(shp2_vestland_utm)
cell_size <- 5000  # 5km

fishnet_sf_utm <- create_fishnet(bbox_utm, cell_size)

# Optionally, reproject the fishnet back to the original CRS
fishnet_sf <- st_transform(fishnet_sf_utm, crs = st_crs(shp2_vestland))

# Plot with ggplot2
fishnet_vestland_map <- ggplot() +
  geom_sf(data = shp2_vestland_utm, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_vestland, aes(color = occurrences), size = 1.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  
  # Add the fishnet grid with black outlines
  geom_sf(data = fishnet_sf, fill = NA, color = "black", size = 0.2) +
  
  ggtitle("Vestland") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(fishnet_vestland_map)

####################### NORDLAND #######################################
# Filter shp2 to include only the geometry for the county of interest
shp2_nordland <- shp2[shp2$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\"" , ]
intersect3_nordland <- intersect3 %>% filter(FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\"" , )

# Reorder based on occurrences (stacked lowest to highest)
intersect3_nordland <- intersect3_nordland[order(intersect3_nordland$occurrences), ]

# Plot with labels
nordland_map <- ggplot() +
  geom_sf(data = shp2_nordland, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_nordland, aes(color = occurrences), size = 2.5, fill = NA) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  ggtitle("Nordland") +
  theme_bw() +
  theme(axis.title.x = element_blank(),  # Remove x-axis title
        axis.title.y = element_blank(),  # Remove y-axis title
        plot.title.position = "panel",  # Position the title centered above the plot
        plot.title = element_text(hjust = 0.5))  # Center the title text

print(nordland_map)

sum(intersect3_nordland$occurrences)
unique(intersect3_nordland$originalScientificName)

# CREATE GRID
# Reproject shp2_nordland to UTM zone 32N
shp2_nordland_utm <- st_transform(shp2_nordland, crs = 25833)

# Create fishnet function
create_fishnet <- function(bbox, cell_size) {
  x_coords <- seq(bbox["xmin"], bbox["xmax"], by = cell_size)
  y_coords <- seq(bbox["ymin"], bbox["ymax"], by = cell_size)
  
  # Ensure the grid covers the entire extent
  if (tail(x_coords, 1) < bbox["xmax"]) x_coords <- c(x_coords, bbox["xmax"])
  if (tail(y_coords, 1) < bbox["ymax"]) y_coords <- c(y_coords, bbox["ymax"])
  
  grid <- expand.grid(x = x_coords, y = y_coords)
  grid_sf <- st_as_sf(grid, coords = c("x", "y"), crs = st_crs(shp2_nordland_utm))
  
  fishnet <- st_make_grid(grid_sf, cellsize = c(cell_size, cell_size), square = TRUE)
  fishnet_sf <- st_sf(geometry = fishnet)
  return(fishnet_sf)
}

# Create a fishnet grid of 5km of shp2_nordland in UTM
bbox_utm <- st_bbox(shp2_nordland_utm)
cell_size <- 5000  # 5km 

fishnet_sf_utm <- create_fishnet(bbox_utm, cell_size)

# Optionally, reproject the fishnet back to the original CRS
fishnet_sf <- st_transform(fishnet_sf_utm, crs = st_crs(shp2_nordland))

# Plot with ggplot2
fishnet_nordland_map <- ggplot() +
  geom_sf(data = shp2_nordland_utm, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_nordland, aes(color = occurrences), size = 1.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  
  # Add the fishnet grid with black outlines
  geom_sf(data = fishnet_sf, fill = NA, color = "black", size = 0.2) +
  
  ggtitle("Nordland") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(fishnet_nordland_map)

####################### ROGALAND #######################################
# Filter shp2 to include only the geometry for the county of interest
shp2_rogaland <- shp2[shp2$FYLKESNAVN == "Rogaland", ]
intersect3_rogaland <- intersect3 %>%
  filter(FYLKESNAVN == "Rogaland",)

# Reorder based on occurrences (stacked lowest to highest)
intersect3_rogaland <- intersect3_rogaland[order(intersect3_rogaland$occurrences), ]

# Plot with labels
rogaland_map <- ggplot() +
  geom_sf(data = shp2_rogaland, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_rogaland, aes(color = occurrences), size = 2.5, fill = NA) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  ggtitle("Rogaland") +
  theme_bw() +
  theme(axis.title.x = element_blank(),  # Remove x-axis title
        axis.title.y = element_blank(),  # Remove y-axis title
        plot.title.position = "panel",  # Position the title centered above the plot
        plot.title = element_text(hjust = 0.5))  # Center the title text

print(rogaland_map)

sum(intersect3_rogaland$occurrences)
unique(intersect3_rogaland$originalScientificName)

# CREATE GRID
# Reproject shp2_rogaland to UTM zone 32N
shp2_rogaland_utm <- st_transform(shp2_rogaland, crs = 25833)

# Create fishnet function
create_fishnet <- function(bbox, cell_size) {
  x_coords <- seq(bbox["xmin"], bbox["xmax"], by = cell_size)
  y_coords <- seq(bbox["ymin"], bbox["ymax"], by = cell_size)
  
  # Ensure the grid covers the entire extent
  if (tail(x_coords, 1) < bbox["xmax"]) x_coords <- c(x_coords, bbox["xmax"])
  if (tail(y_coords, 1) < bbox["ymax"]) y_coords <- c(y_coords, bbox["ymax"])
  
  grid <- expand.grid(x = x_coords, y = y_coords)
  grid_sf <- st_as_sf(grid, coords = c("x", "y"), crs = st_crs(shp2_rogaland_utm))
  
  fishnet <- st_make_grid(grid_sf, cellsize = c(cell_size, cell_size), square = TRUE)
  fishnet_sf <- st_sf(geometry = fishnet)
  return(fishnet_sf)
}

# Create a fishnet grid of 5km of shp2_rogaland in UTM
bbox_utm <- st_bbox(shp2_rogaland_utm)
cell_size <- 5000  # 5km

fishnet_sf_utm <- create_fishnet(bbox_utm, cell_size)

# Optionally, reproject the fishnet back to the original CRS
fishnet_sf <- st_transform(fishnet_sf_utm, crs = st_crs(shp2_rogaland))

# Plot with ggplot2
fishnet_rogaland_map <- ggplot() +
  geom_sf(data = shp2_rogaland_utm, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_rogaland, aes(color = occurrences), size = 1.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  
  # Add the fishnet grid with black outlines
  geom_sf(data = fishnet_sf, fill = NA, color = "black", size = 0.2) +
  
  ggtitle("Rogaland") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(fishnet_rogaland_map)

####################### TRØNDELAG #######################################
# Filter shp2 to include only the geometry for the county of interest
shp2_troendelag <- shp2[shp2$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\"" , ]
intersect3_troendelag <- intersect3 %>%
  filter(FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\"")

# Reorder based on occurrences (stacked lowest to highest)
intersect3_troendelag <- intersect3_troendelag[order(intersect3_troendelag$occurrences), ]

# Plot with labels
troendelag_map <- ggplot() +
  geom_sf(data = shp2_troendelag, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_troendelag, aes(color = occurrences), size = 2.5, fill = NA) +  # Add alpha for transparency
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  ggtitle("Tr\u00F8ndelag") +
  theme_bw() +
  theme(axis.title.x = element_blank(),  # Remove x-axis title
        axis.title.y = element_blank(),  # Remove y-axis title
        plot.title.position = "panel",  # Position the title centered above the plot
        plot.title = element_text(hjust = 0.5))  # Center the title text

print(troendelag_map)

sum(intersect3_troendelag$occurrences)
unique(intersect3_troendelag$originalScientificName)
sum(intersect3_troendelag$occurrences)

# CREATE GRID
# Reproject shp2_troendelag to UTM zone 32N
shp2_troendelag_utm <- st_transform(shp2_troendelag, crs = 25833)

# Create fishnet function
create_fishnet <- function(bbox, cell_size) {
  x_coords <- seq(bbox["xmin"], bbox["xmax"], by = cell_size)
  y_coords <- seq(bbox["ymin"], bbox["ymax"], by = cell_size)
  
  # Ensure the grid covers the entire extent
  if (tail(x_coords, 1) < bbox["xmax"]) x_coords <- c(x_coords, bbox["xmax"])
  if (tail(y_coords, 1) < bbox["ymax"]) y_coords <- c(y_coords, bbox["ymax"])
  
  grid <- expand.grid(x = x_coords, y = y_coords)
  grid_sf <- st_as_sf(grid, coords = c("x", "y"), crs = st_crs(shp2_troendelag_utm))
  
  fishnet <- st_make_grid(grid_sf, cellsize = c(cell_size, cell_size), square = TRUE)
  fishnet_sf <- st_sf(geometry = fishnet)
  return(fishnet_sf)
}

# Create a fishnet grid of 5km of shp2_troendelag in UTM
bbox_utm <- st_bbox(shp2_troendelag_utm)
cell_size <- 5000  # 5km

fishnet_sf_utm <- create_fishnet(bbox_utm, cell_size)

# Optionally, reproject the fishnet back to the original CRS
fishnet_sf <- st_transform(fishnet_sf_utm, crs = st_crs(shp2_troendelag))

# Plot with ggplot2
fishnet_troendelag_map <- ggplot() +
  geom_sf(data = shp2_troendelag_utm, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_troendelag, aes(color = occurrences), size = 1.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  
  # Add the fishnet grid with black outlines
  geom_sf(data = fishnet_sf, fill = NA, color = "black", size = 0.2) +
  
  ggtitle("Tr\u00F8ndelag") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(fishnet_troendelag_map)

####################### FINNMARK #######################################
# Filter shp2 to include only the geometry for the county of interest
shp2_finnmark <- shp2[shp2$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\"", ]
intersect3_finnmark <- intersect3 %>%
  filter(FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\"",)

# Reorder based on occurrences (stacked lowest to highest)
intersect3_finnmark <- intersect3_finnmark[order(intersect3_finnmark$occurrences), ]

# Plot with labels
finnmark_map <- ggplot() +
  geom_sf(data = shp2_finnmark, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_finnmark, aes(color = occurrences), size = 2.5, fill = NA) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  ggtitle("Finnmark") +
  theme_bw() +
  theme(axis.title.x = element_blank(),  # Remove x-axis title
        axis.title.y = element_blank(),  # Remove y-axis title
        plot.title.position = "panel",  # Position the title centered above the plot
        plot.title = element_text(hjust = 0.5))  # Center the title text

print(finnmark_map)

sum(intersect3_finnmark$occurrences)
unique(intersect3_finnmark$originalScientificName)

# CREATE GRID
# Reproject shp2_finnmark to UTM zone 32N
shp2_finnmark_utm <- st_transform(shp2_finnmark, crs = 25833)

# Create fishnet function
create_fishnet <- function(bbox, cell_size) {
  x_coords <- seq(bbox["xmin"], bbox["xmax"], by = cell_size)
  y_coords <- seq(bbox["ymin"], bbox["ymax"], by = cell_size)
  
  # Ensure the grid covers the entire extent
  if (tail(x_coords, 1) < bbox["xmax"]) x_coords <- c(x_coords, bbox["xmax"])
  if (tail(y_coords, 1) < bbox["ymax"]) y_coords <- c(y_coords, bbox["ymax"])
  
  grid <- expand.grid(x = x_coords, y = y_coords)
  grid_sf <- st_as_sf(grid, coords = c("x", "y"), crs = st_crs(shp2_finnmark_utm))
  
  fishnet <- st_make_grid(grid_sf, cellsize = c(cell_size, cell_size), square = TRUE)
  fishnet_sf <- st_sf(geometry = fishnet)
  return(fishnet_sf)
}

# Create a fishnet grid of 5km of shp2_finnmark in UTM
bbox_utm <- st_bbox(shp2_finnmark_utm)
cell_size <- 5000  # 5km

fishnet_sf_utm <- create_fishnet(bbox_utm, cell_size)

# Optionally, reproject the fishnet back to the original CRS
fishnet_sf <- st_transform(fishnet_sf_utm, crs = st_crs(shp2_finnmark))

# Plot with ggplot2
fishnet_finnmark_map <- ggplot() +
  geom_sf(data = shp2_finnmark_utm, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_finnmark, aes(color = occurrences), size = 1.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  
  # Add the fishnet grid with black outlines
  geom_sf(data = fishnet_sf, fill = NA, color = "black", size = 0.2) +
  
  ggtitle("Finnmark") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(fishnet_finnmark_map)

####################### AGDER #######################################
# Filter shp2 to include only the geometry for the county of interest
shp2_agder <- shp2[shp2$FYLKESNAVN == "Agder", ]
intersect3_agder <- intersect3 %>%
  filter(FYLKESNAVN == "Agder",)

# Reorder based on occurrences (stacked lowest to highest)
intersect3_agder <- intersect3_agder[order(intersect3_agder$occurrences), ]

# Plot with labels
agder_map <- ggplot() +
  geom_sf(data = shp2_agder, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_agder, aes(color = occurrences), size = 2.5, fill = NA) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  ggtitle("Agder") +
  theme_bw() +
  theme(axis.title.x = element_blank(),  # Remove x-axis title
        axis.title.y = element_blank(),  # Remove y-axis title
        plot.title.position = "panel",  # Position the title centered above the plot
        plot.title = element_text(hjust = 0.5))  # Center the title text

print(agder_map)

sum(intersect3_agder$occurrences)
unique(intersect3_agder$originalScientificName)

# CREATE GRID
# Reproject shp2_agder to UTM zone 32N
shp2_agder_utm <- st_transform(shp2_agder, crs = 25833)

# Create fishnet function
create_fishnet <- function(bbox, cell_size) {
  x_coords <- seq(bbox["xmin"], bbox["xmax"], by = cell_size)
  y_coords <- seq(bbox["ymin"], bbox["ymax"], by = cell_size)
  
  # Ensure the grid covers the entire extent
  if (tail(x_coords, 1) < bbox["xmax"]) x_coords <- c(x_coords, bbox["xmax"])
  if (tail(y_coords, 1) < bbox["ymax"]) y_coords <- c(y_coords, bbox["ymax"])
  
  grid <- expand.grid(x = x_coords, y = y_coords)
  grid_sf <- st_as_sf(grid, coords = c("x", "y"), crs = st_crs(shp2_agder_utm))
  
  fishnet <- st_make_grid(grid_sf, cellsize = c(cell_size, cell_size), square = TRUE)
  fishnet_sf <- st_sf(geometry = fishnet)
  return(fishnet_sf)
}

# Create a fishnet grid of 5km of shp2_agder in UTM
bbox_utm <- st_bbox(shp2_agder_utm)
cell_size <- 5000  # 5km 

fishnet_sf_utm <- create_fishnet(bbox_utm, cell_size)

# Optionally, reproject the fishnet back to the original CRS
fishnet_sf <- st_transform(fishnet_sf_utm, crs = st_crs(shp2_agder))

# Plot with ggplot2
fishnet_agder_map <- ggplot() +
  geom_sf(data = shp2_agder_utm, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_agder, aes(color = occurrences), size = 1.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  
  # Add the fishnet grid with black outlines
  geom_sf(data = fishnet_sf, fill = NA, color = "black", size = 0.2) +
  
  ggtitle("Agder") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(fishnet_agder_map)

####################### TELEMARK #######################################
# Filter shp2 to include only the geometry for the county of interest
shp2_telemark <- shp2[shp2$FYLKESNAVN == "Telemark", ]
intersect3_telemark <- intersect3 %>%
  filter(FYLKESNAVN == "Telemark",)

# Reorder based on occurrences (stacked lowest to highest)
intersect3_telemark <- intersect3_telemark[order(intersect3_telemark$occurrences), ]

# Plot with labels
telemark_map <- ggplot() +
  geom_sf(data = shp2_telemark, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_telemark, aes(color = occurrences), size = 2.5, fill = NA) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  ggtitle("Telemark") +
  theme_bw() +
  theme(axis.title.x = element_blank(),  # Remove x-axis title
        axis.title.y = element_blank(),  # Remove y-axis title
        plot.title.position = "panel",  # Position the title centered above the plot
        plot.title = element_text(hjust = 0.5))  # Center the title text

print(telemark_map)

sum(intersect3_telemark$occurrences)
unique(intersect3_telemark$originalScientificName)

# CREATE GRID
# Reproject shp2_telemark to UTM zone 32N
shp2_telemark_utm <- st_transform(shp2_telemark, crs = 25833)

# Create fishnet function
create_fishnet <- function(bbox, cell_size) {
  x_coords <- seq(bbox["xmin"], bbox["xmax"], by = cell_size)
  y_coords <- seq(bbox["ymin"], bbox["ymax"], by = cell_size)
  
  # Ensure the grid covers the entire extent
  if (tail(x_coords, 1) < bbox["xmax"]) x_coords <- c(x_coords, bbox["xmax"])
  if (tail(y_coords, 1) < bbox["ymax"]) y_coords <- c(y_coords, bbox["ymax"])
  
  grid <- expand.grid(x = x_coords, y = y_coords)
  grid_sf <- st_as_sf(grid, coords = c("x", "y"), crs = st_crs(shp2_telemark_utm))
  
  fishnet <- st_make_grid(grid_sf, cellsize = c(cell_size, cell_size), square = TRUE)
  fishnet_sf <- st_sf(geometry = fishnet)
  return(fishnet_sf)
}

# Create a fishnet grid of 2km of shp2_telemark in UTM
bbox_utm <- st_bbox(shp2_telemark_utm)
cell_size <- 2000  # 2km 

fishnet_sf_utm <- create_fishnet(bbox_utm, cell_size)

# Optionally, reproject the fishnet back to the original CRS
fishnet_sf <- st_transform(fishnet_sf_utm, crs = st_crs(shp2_telemark))

# Plot with ggplot2
fishnet_telemark_map <- ggplot() +
  geom_sf(data = shp2_telemark_utm, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_telemark, aes(color = occurrences), size = 1.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  
  # Add the fishnet grid with black outlines
  geom_sf(data = fishnet_sf, fill = NA, color = "black", size = 0.2) +
  
  ggtitle("Telemark") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(fishnet_telemark_map)

####################### VESTFOLD #######################################
# Filter shp2 to include only the geometry for the county of interest
shp2_vestfold <- shp2[shp2$FYLKESNAVN == "Vestfold", ]
intersect3_vestfold <- intersect3 %>%
  filter(FYLKESNAVN == "Vestfold",)

# Reorder based on occurrences (stacked lowest to highest)
intersect3_vestfold <- intersect3_vestfold[order(intersect3_vestfold$occurrences), ]

# Plot with labels
vestfold_map <- ggplot() +
  geom_sf(data = shp2_vestfold, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_vestfold, aes(color = occurrences), size = 2.5, fill = NA) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  ggtitle("Vestfold") +
  theme_bw() +
  theme(axis.title.x = element_blank(),  # Remove x-axis title
        axis.title.y = element_blank(),  # Remove y-axis title
        plot.title.position = "panel",  # Position the title centered above the plot
        plot.title = element_text(hjust = 0.5))  # Center the title text

print(vestfold_map)

sum(intersect3_vestfold$occurrences)
unique(intersect3_vestfold$originalScientificName)

# CREATE GRID
# Reproject shp2_vestfold to UTM zone 32N
shp2_vestfold_utm <- st_transform(shp2_vestfold, crs = 25833)

# Create fishnet function
create_fishnet <- function(bbox, cell_size) {
  x_coords <- seq(bbox["xmin"], bbox["xmax"], by = cell_size)
  y_coords <- seq(bbox["ymin"], bbox["ymax"], by = cell_size)
  
  # Ensure the grid covers the entire extent
  if (tail(x_coords, 1) < bbox["xmax"]) x_coords <- c(x_coords, bbox["xmax"])
  if (tail(y_coords, 1) < bbox["ymax"]) y_coords <- c(y_coords, bbox["ymax"])
  
  grid <- expand.grid(x = x_coords, y = y_coords)
  grid_sf <- st_as_sf(grid, coords = c("x", "y"), crs = st_crs(shp2_vestfold_utm))
  
  fishnet <- st_make_grid(grid_sf, cellsize = c(cell_size, cell_size), square = TRUE)
  fishnet_sf <- st_sf(geometry = fishnet)
  return(fishnet_sf)
}

# Create a fishnet grid of 5km of shp2_vestfold in UTM
bbox_utm <- st_bbox(shp2_vestfold_utm)
cell_size <- 5000  # 5km

fishnet_sf_utm <- create_fishnet(bbox_utm, cell_size)

# Optionally, reproject the fishnet back to the original CRS
fishnet_sf <- st_transform(fishnet_sf_utm, crs = st_crs(shp2_vestfold))

# Plot with ggplot2
fishnet_vestfold_map <- ggplot() +
  geom_sf(data = shp2_vestfold_utm, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_vestfold, aes(color = occurrences), size = 1.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  
  # Add the fishnet grid with black outlines
  geom_sf(data = fishnet_sf, fill = NA, color = "black", size = 0.2) +
  
  ggtitle("Vestfold") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(fishnet_vestfold_map)

####################### BUSKERUD #######################################
# Filter shp2 to include only the geometry for the county of interest
shp2_buskerud <- shp2[shp2$FYLKESNAVN == "Buskerud", ]
intersect3_buskerud <- intersect3 %>%
  filter(FYLKESNAVN == "Buskerud",)

# Reorder based on occurrences (stacked lowest to highest)
intersect3_buskerud <- intersect3_buskerud[order(intersect3_buskerud$occurrences), ]

# Plot with labels
buskerud_map <- ggplot() +
  geom_sf(data = shp2_buskerud, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_buskerud, aes(color = occurrences), size = 2.5, fill = NA) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  ggtitle("Buskerud") +
  theme_bw() +
  theme(axis.title.x = element_blank(),  # Remove x-axis title
        axis.title.y = element_blank(),  # Remove y-axis title
        plot.title.position = "panel",  # Position the title centered above the plot
        plot.title = element_text(hjust = 0.5))  # Center the title text

print(buskerud_map)

sum(intersect3_buskerud$occurrences)
unique(intersect3_buskerud$originalScientificName)

# CREATE GRID
# Reproject shp2_buskerud to UTM zone 32N
shp2_buskerud_utm <- st_transform(shp2_buskerud, crs = 25833)

# Create fishnet function
create_fishnet <- function(bbox, cell_size) {
  x_coords <- seq(bbox["xmin"], bbox["xmax"], by = cell_size)
  y_coords <- seq(bbox["ymin"], bbox["ymax"], by = cell_size)
  
  # Ensure the grid covers the entire extent
  if (tail(x_coords, 1) < bbox["xmax"]) x_coords <- c(x_coords, bbox["xmax"])
  if (tail(y_coords, 1) < bbox["ymax"]) y_coords <- c(y_coords, bbox["ymax"])
  
  grid <- expand.grid(x = x_coords, y = y_coords)
  grid_sf <- st_as_sf(grid, coords = c("x", "y"), crs = st_crs(shp2_buskerud_utm))
  
  fishnet <- st_make_grid(grid_sf, cellsize = c(cell_size, cell_size), square = TRUE)
  fishnet_sf <- st_sf(geometry = fishnet)
  return(fishnet_sf)
}

# Create a fishnet grid of 2km of shp2_buskerud in UTM
bbox_utm <- st_bbox(shp2_buskerud_utm)
cell_size <- 2000  # 2km

fishnet_sf_utm <- create_fishnet(bbox_utm, cell_size)

# Optionally, reproject the fishnet back to the original CRS
fishnet_sf <- st_transform(fishnet_sf_utm, crs = st_crs(shp2_buskerud))

# Plot with ggplot2
fishnet_buskerud_map <- ggplot() +
  geom_sf(data = shp2_buskerud_utm, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_buskerud, aes(color = occurrences), size = 1.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  
  # Add the fishnet grid with black outlines
  geom_sf(data = fishnet_sf, fill = NA, color = "black", size = 0.2) +
  
  ggtitle("Buskerud") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(fishnet_buskerud_map)

####################### OSLO #######################################
# Filter shp2 to include only the geometry for the county of interest
shp2_oslo <- shp2[shp2$FYLKESNAVN == "Oslo", ]
intersect3_oslo <- intersect3 %>%
  filter(FYLKESNAVN == "Oslo",)

# Reorder based on occurrences (stacked lowest to highest)
intersect3_oslo <- intersect3_oslo[order(intersect3_oslo$occurrences), ]

# Plot with labels
oslo_map <- ggplot() +
  geom_sf(data = shp2_oslo, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_oslo, aes(color = occurrences), size = 2.5, fill = NA) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  ggtitle("Oslo") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(oslo_map)

sum(intersect3_oslo$occurrences)
unique(intersect3_oslo$originalScientificName)

# CREATE GRID
# Reproject shp2_oslo to UTM zone 32N
shp2_oslo_utm <- st_transform(shp2_oslo, crs = 25833)

# Create fishnet function
create_fishnet <- function(bbox, cell_size) {
  x_coords <- seq(bbox["xmin"], bbox["xmax"], by = cell_size)
  y_coords <- seq(bbox["ymin"], bbox["ymax"], by = cell_size)
  
  # Ensure the grid covers the entire extent
  if (tail(x_coords, 1) < bbox["xmax"]) x_coords <- c(x_coords, bbox["xmax"])
  if (tail(y_coords, 1) < bbox["ymax"]) y_coords <- c(y_coords, bbox["ymax"])
  
  grid <- expand.grid(x = x_coords, y = y_coords)
  grid_sf <- st_as_sf(grid, coords = c("x", "y"), crs = st_crs(shp2_oslo_utm))
  
  fishnet <- st_make_grid(grid_sf, cellsize = c(cell_size, cell_size), square = TRUE)
  fishnet_sf <- st_sf(geometry = fishnet)
  return(fishnet_sf)
}

# Create a fishnet grid of 2km of shp2_oslo in UTM
bbox_utm <- st_bbox(shp2_oslo_utm)
cell_size <- 2000  # 2km

fishnet_sf_utm <- create_fishnet(bbox_utm, cell_size)

# Optionally, reproject the fishnet back to the original CRS
fishnet_sf <- st_transform(fishnet_sf_utm, crs = st_crs(shp2_oslo))

# Plot with ggplot2
fishnet_oslo_map <- ggplot() +
  geom_sf(data = shp2_oslo_utm, color = "gray30", size = 0.2, fill = NA) +
  geom_sf(data = intersect3_oslo, aes(color = occurrences), size = 1.5) +
  scale_color_viridis_c(option = "viridis", begin = 0, end = 1, direction = -1) +  # continuous color scale
  
  # Add the fishnet grid with black outlines
  geom_sf(data = fishnet_sf, fill = NA, color = "black", size = 0.2) +
  
  ggtitle("Oslo") +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),  # Remove x-axis title
    axis.title.y = element_blank(),  # Remove y-axis title
    plot.title.position = "panel",  # Position the title centered above the plot
    plot.title = element_text(hjust = 0.5)  # Center the title text
  )

print(fishnet_oslo_map)

################################### STATISTICS #######################################################
library(cowplot)

# Set up the grid of plots for each region
plot_grid(
  finnmark_map, troms_map, 
  nrow = 1, byrow = TRUE,
  align = "h", axis = "l"
) 

plot_grid(
  nordland_map, troendelag_map,
  nrow = 1, byrow = TRUE,
  align = "h", axis = "l"
)

plot_grid(
moere_map,vestland_map,
  nrow = 1, byrow = TRUE,
  align = "h", axis = "l"
)

plot_grid(
rogaland_map, agder_map,
  nrow = 1, byrow = TRUE,
  align = "h", axis = "l"
)
  
plot_grid(
  telemark_map, buskerud_map, 
  nrow = 1, byrow = TRUE,
  align = "h", axis = "l"
)

plot_grid(
vestfold_map, oslo_map,
  nrow =1 , byrow = TRUE,
  align = "h", axis = "l"
)

 plot_grid(
 akershus_map, oestfold_map,
   nrow = 1, byrow = TRUE,
   align = "h", axis = "l"
)

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SUMMARIZE OCCURRENCES

sum(intersect3$occurrences) #136,942

length(unique(intersect3$originalScientificName)) # 3737

# % of occurrences for each county compared to sum of total occurrences
occurrence_ratios <- c(
  (sum(intersect3_finnmark$occurrences) / sum(intersect3$occurrences)),
  (sum(intersect3_moere$occurrences) / sum(intersect3$occurrences)), 
  (sum(intersect3_nordland$occurrences) / sum(intersect3$occurrences)),
  (sum(intersect3_troms$occurrences) / sum(intersect3$occurrences)),
  (sum(intersect3_troendelag$occurrences) / sum(intersect3$occurrences)),
  (sum(intersect3_agder$occurrences) / sum(intersect3$occurrences)),
  (sum(intersect3_akershus$occurrences) / sum(intersect3$occurrences)), 
  (sum(intersect3_buskerud$occurrences) / sum(intersect3$occurrences)), 
  (sum(intersect3_oslo$occurrences) / sum(intersect3$occurrences)), 
  (sum(intersect3_rogaland$occurrences) / sum(intersect3$occurrences)),
  (sum(intersect3_telemark$occurrences) / sum(intersect3$occurrences)), 
  (sum(intersect3_vestfold$occurrences) / sum(intersect3$occurrences)), 
  (sum(intersect3_vestland$occurrences) / sum(intersect3$occurrences)), 
  (sum(intersect3_oestfold$occurrences) / sum(intersect3$occurrences))
  )
print(occurrence_ratios)
# Format the ratios as percentages
occ_percentage <- percent(occurrence_ratios, accuracy = 0.01)
print(occ_percentage)

sum(unique(intersect3$area_fylk)) # 153,463.3 sq. km
# Calculate the proportion relative to the total area
size_ratios <- c(
  (unique(intersect3$area_fylk[intersect3$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]) / sum(unique(intersect3$area_fylk))),
  (unique(intersect3$area_fylk[intersect3$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]) / sum(unique(intersect3$area_fylk))),
  (unique(intersect3$area_fylk[intersect3$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\""]) / sum(unique(intersect3$area_fylk))),
  (unique(intersect3$area_fylk[intersect3$FYLKESNAVN == "\"Troms - Romsa - Tromssa\""]) / sum(unique(intersect3$area_fylk))),
  (unique(intersect3$area_fylk[intersect3$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]) / sum(unique(intersect3$area_fylk))),
  (unique(intersect3$area_fylk[intersect3$FYLKESNAVN == "Agder"]) / sum(unique(intersect3$area_fylk))),
  (unique(intersect3$area_fylk[intersect3$FYLKESNAVN == "Akershus"]) / sum(unique(intersect3$area_fylk))),
  (unique(intersect3$area_fylk[intersect3$FYLKESNAVN == "Buskerud"]) / sum(unique(intersect3$area_fylk))),
  (unique(intersect3$area_fylk[intersect3$FYLKESNAVN == "Oslo"]) / sum(unique(intersect3$area_fylk))),
  (unique(intersect3$area_fylk[intersect3$FYLKESNAVN == "Rogaland"]) / sum(unique(intersect3$area_fylk))),
  (unique(intersect3$area_fylk[intersect3$FYLKESNAVN == "Telemark"]) / sum(unique(intersect3$area_fylk))),
  (unique(intersect3$area_fylk[intersect3$FYLKESNAVN == "Vestfold"]) / sum(unique(intersect3$area_fylk))),
  (unique(intersect3$area_fylk[intersect3$FYLKESNAVN == "Vestland"]) / sum(unique(intersect3$area_fylk))),
  (unique(intersect3$area_fylk[intersect3$FYLKESNAVN == "\u00D8stfold"]) / sum(unique(intersect3$area_fylk)))
)                 
print(size_ratios) # in sq km
# Format the ratios as percentages
size_percentage <- percent(size_ratios, accuracy = 0.01)
print(size_percentage)

by_county_occ_sum <- intersect3 %>%
  group_by(FYLKESNAVN) %>%
  summarize(occurrences = sum(occurrences))
print(by_county_occ_sum)

by_county_area_sum <- intersect3 %>%
  group_by(FYLKESNAVN) %>%
  summarize(area_fylk = unique(area_fylk))
print(by_county_area_sum)

# Create a summary table 
summary_table <- data.frame(
  FYLKESNAVN = (by_county_area_sum$FYLKESNAVN),
  Total_Occurrences = (by_county_occ_sum$occurrences),
  Percent_Occurrences = (occ_percentage),
  County_Size = (by_county_area_sum$area_fylk),
  Percent_Size = (size_percentage)
)
print(summary_table)

# Returns the data into a format for latex, using kableExtra
kable(summary_table, "latex", file = "summary_table.tex")

# Normalize species occurrences by area for each county
data <- data.frame(
  county = c("Agder", "Akershus", "Buskerud", 
             "Finnmark", "M\u00F8re og Romsdal", "Nordland",
             "Oslo", "Rogaland", "Telemark", "Troms",
             "Tr\u00F8delag", "Vestfold", "Vestland", "\u00D8stfold"),
  area_sq_km = c(6749.62, 314.67, 43.12, 26430.87, 11950.07, 
                 44251.01, 24.81, 7537.35, 937.67, 16360.65, 18662.50, 
                 1922.30, 17348.37, 930.30),
  occurrences = c(33761, 1314, 1, 1327, 9839, 9695, 
                  96, 11707, 472, 12192, 18979, 5813, 18290, 1536)
)

# Calculate species density
data$species_density <- data$occurrences / data$area_sq_km

# Log transform the species density
data$log_species_density <- log(data$species_density + 1)

# Scale the species density to the range [0, 1]
data$scaled_species_density <- (data$species_density - min(data$species_density)) / (max(data$species_density) - min(data$species_density))

# Print the final data
print(data)

ggplot(data, aes(x = county, y = species_density)) +
  geom_bar(stat = "identity", fill = "firebrick4") +
  labs(title = "Density of Species Occurrence Records per County",
       x = "County", size = 3,
       y = "Species Density (occurrences per sq.km)", size = 3) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 20),
    axis.title.x = element_text(size = 14),
    axis.title.y = element_text(size = 14),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12)
  )
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% STATS FROM GIS LAYERS

# Read the shp made in ArcGIS Pro to an sf object - kelp reference areas (https://open-data-fiskeridirektoratet-fiskeridir.hub.arcgis.com/datasets/50c3d14959444e77ac6ed6d96308a2bd_0/explore?location=60.485391%2C9.006054%2C6.49)
tare_shp <- st_read("C:/Users/gngia/OneDrive/Documents/new obis/tare_referense_omr_new.shp", stringsAsFactors=FALSE)
tare_shp <- st_transform(tare_shp, crs = "EPSG:4326")
print(tare_shp1 <- st_crs(tare_shp)) # area is in sq km
class(tare_shp)

unique(tare_shp$fylke)

# Find the sums of all areas of kelp reference areas per county
# Use the sum of municipality areas summed for each county = sum_areas from above
# Calculate the proportion of kelp reference areas per county relative to the total area of each county
tare_ref_omr_ratios <- c(
  (sum(tare_shp$area[tare_shp$fylke == "M\u00F8re og Romsdal"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]*1e-06)*100), # 0.1713162 
  (sum(tare_shp$area[tare_shp$fylke == "Tr\u00F8ndelag"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]*1e-06)*100), # 0.7447074 
  (sum(tare_shp$area[tare_shp$fylke == "Vestland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Vestland"]*1e-06)*100), # 0.7913688 
  (sum(tare_shp$area[tare_shp$fylke == "Nordland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\""]*1e-06)*100) # 0.3765071
)
print(tare_ref_omr_ratios)

# Make tare_ref_omr_ratios output into percentages
tare_ref_percent <- c(0.1713162, 0.7447074, 0.7913688, 0.3765071)
tare_ref_percent <- paste0(round(tare_ref_percent, 2), "%")
print(tare_ref_percent)

# Read the shp made in ArcGIS Pro to an sf object - coral reef  (https://open-data-fiskeridirektoratet-fiskeridir.hub.arcgis.com/datasets/6466197faeb9430c9665d24a05ae3372_11/explore?location=65.127684%2C15.822468%2C5.01)
#"Prohibition on the use of tools that are towed while fishing, as well as nets, lines and fishing lines"
korall_forbudsomr_shp <- st_read("C:/Users/gngia/OneDrive/Documents/new obis/Korall_rev_forbudsomr_new.shp", stringsAsFactors=FALSE)
korall_forbudsomr_shp <- st_transform(korall_forbudsomr_shp, crs = "EPSG:4326")
print(korall_forbudsomr_shp1 <- st_crs(korall_forbudsomr_shp)) # area is in sq km
class(korall_forbudsomr_shp)

unique(korall_forbudsomr_shp$FYLKESNAVN)

# Find the sums of all areas of prohibited fishing areas near corals per county
# Use the sum of municipality areas summed for each county = sum_areas from above
# Calculate the proportion of prohibited fishing areas near corals per county relative to the total area of each county water
korall_forbudsomr_ratios <- c(
  (sum(korall_forbudsomr_shp$area[korall_forbudsomr_shp$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]*1e-06)*100), # 0.372049970
  (sum(korall_forbudsomr_shp$area[korall_forbudsomr_shp$FYLKESNAVN == "\u00D8stfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\u00D8stfold"]*1e-06)*100), # 1.215242501
  (sum(korall_forbudsomr_shp$area[korall_forbudsomr_shp$FYLKESNAVN == "\"Troms - Romsa - Tromssa\"" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Troms - Romsa - Tromssa\""]*1e-06)*100), # 0.281538206
  (sum(korall_forbudsomr_shp$area[korall_forbudsomr_shp$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\"" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\""]*1e-06)*100), # 0.267002361
  (sum(korall_forbudsomr_shp$area[korall_forbudsomr_shp$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]*1e-06)*100), # 0.014312180
  (sum(korall_forbudsomr_shp$area[korall_forbudsomr_shp$FYLKESNAVN == "Rogaland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Rogaland"]*1e-06)*100), # 0.001301746
  (sum(korall_forbudsomr_shp$area[korall_forbudsomr_shp$FYLKESNAVN == "Vestland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Vestland"]*1e-06)*100), # 0.003860877
  (sum(korall_forbudsomr_shp$area[korall_forbudsomr_shp$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]*1e-06)*100) # 0.052212350
)
print(korall_forbudsomr_ratios)

# Make output into percentages
korall_forbudsomr_percent <- c(0.372049970, 1.215242501, 0.281538206, 0.267002361, 0.014312180, 0.001301746, 0.003860877, 0.052212350)
korall_forbudsomr_percent <- paste0(round(korall_forbudsomr_percent, 2), "%")
print(korall_forbudsomr_percent)


# Read the shp made in ArcGIS Pro to an sf object - IMR identified coral reefs (https://kart.hi.no/mareano/web/wicket/bookmarkable/org.geoserver.web.demo.MapPreviewPage?0&filter=false)
korall_id_shp <- st_read("C:/Users/gngia/OneDrive/Documents/new obis/korall_rev_id_new.shp", stringsAsFactors=FALSE)
korall_id_shp <- st_transform(korall_id_shp, crs = "EPSG:4326")
print(korall_id_shp1 <- st_crs(korall_id_shp)) # area is in sq km
class(korall_id_shp)

unique(korall_id_shp$FYLKESNAVN)

# Find the sums of all areas of identified coral reefs (by IMR) per county
# Use the sum of municipality areas summed for each county = sum_areas from above
# Calculate the proportion of identified coral reefs (by IMR) per county relative to the total area of each county water
korall_id_ratios <- c(
  (sum(korall_id_shp$area[korall_id_shp$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]*1e-06)*100), # 0.01419937
  (sum(korall_id_shp$area[korall_id_shp$FYLKESNAVN == "\u00D8stfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\u00D8stfold"]*1e-06)*100), # 1.20670438
  (sum(korall_id_shp$area[korall_id_shp$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]*1e-06)*100) # 0.10477064
)
print(korall_id_ratios)

# Make output into percentages
korall_id_percent <- c(0.01419937, 1.20670438, 0.10477064)
korall_id_percent <- paste0(round(korall_id_percent, 2), "%")
print(korall_id_percent)

# Read the shp made in ArcGIS Pro to an sf object - Coral MPA / Coral conservation areas (https://kart.hi.no/mareano/web/wicket/bookmarkable/org.geoserver.web.demo.MapPreviewPage?0&filter=false)
koral_vern_omr <- st_read("C:/Users/gngia/OneDrive/Documents/new obis/korall_rev_vern_omr.shp", stringsAsFactors=FALSE)
koral_vern_omr <- st_transform(koral_vern_omr, crs = "EPSG:4326")
print(koral_vern_omr1 <- st_crs(koral_vern_omr)) # area is in sq km
class(koral_vern_omr)

unique(koral_vern_omr$FYLKESNAVN)

# Find the sums of all areas of coral conservation areas per county
# Use the sum of municipality areas summed for each county = sum_areas from above
# Calculate the proportion of coral conservation areas per county relative to the total area of each county water
korall_vernomr_ratios <- c(
  (sum(koral_vern_omr$area[koral_vern_omr$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]*1e-06)*100), # 0.372049970
  (sum(koral_vern_omr$area[koral_vern_omr$FYLKESNAVN == "\u00D8stfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\u00D8stfold"]*1e-06)*100), # 1.215242501
  (sum(koral_vern_omr$area[koral_vern_omr$FYLKESNAVN == "\"Troms - Romsa - Tromssa\"" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Troms - Romsa - Tromssa\""]*1e-06)*100), # 0.281538206
  (sum(koral_vern_omr$area[koral_vern_omr$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\"" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\""]*1e-06)*100), # 0.267002361
  (sum(koral_vern_omr$area[koral_vern_omr$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]*1e-06)*100), # 0.014312180
  (sum(koral_vern_omr$area[koral_vern_omr$FYLKESNAVN == "Rogaland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Rogaland"]*1e-06)*100), # 0.001301746
  (sum(koral_vern_omr$area[koral_vern_omr$FYLKESNAVN == "Vestland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Vestland"]*1e-06)*100), # 0.003860877
  (sum(koral_vern_omr$area[koral_vern_omr$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]*1e-06)*100) # 0.052212350
)
print(korall_vernomr_ratios)


# korall_rev_vern_omr and Korall_rev_forbudsomr_new actually are same exact data 
#except in korall vern they call them Coral MPAs and in forbudsomr they just say you cant fish or drag line through those areas

# Make output into percentages
korall_vernomr_percent <- c(0.372049971, 1.214478719, 0.281538204,0.267002357, 0.014312180, 0.001301746, 0.003860721, 0.052212350)
korall_vernomr_percent <- paste0(round(korall_vernomr_percent, 2), "%")
print(korall_vernomr_percent)

# Read the shp made in ArcGIS Pro to an sf object - WDPA & WDOECM, Norway (https://www.protectedplanet.net/en)
wdpa_apr <- st_read("C:/Users/gngia/OneDrive/Documents/new obis/wpda_wdoecm_apr.shp", stringsAsFactors=FALSE)
wdpa_apr <- st_transform(wdpa_apr, crs = "EPSG:4326")
print(wdpa_apr1 <- st_crs(wdpa_apr)) # area is in sq km

unique(wdpa_apr$FYLKESNAVN)

# Find the sums of all areas of WDPA & WDOECM per county
# Use the sum of municipality areas summed for each county = sum_areas from above
# Calculate the proportion of WDPA & WDOECM per county relative to the total area of each county water
wdpa_apr_ratios <- c(
  (sum(wdpa_apr$area[wdpa_apr$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]*1e-06)*100), # 4.7017656
  (sum(wdpa_apr$area[wdpa_apr$FYLKESNAVN == "\u00D8stfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\u00D8stfold"]*1e-06)*100), # 37.5175125  
  (sum(wdpa_apr$area[wdpa_apr$FYLKESNAVN == "\"Troms - Romsa - Tromssa\"" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Troms - Romsa - Tromssa\""]*1e-06)*100), # 2.2904810  
  (sum(wdpa_apr$area[wdpa_apr$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\"" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\""]*1e-06)*100), # 2.5926527  
  (sum(wdpa_apr$area[wdpa_apr$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]*1e-06)*100), # 0.4752846
  (sum(wdpa_apr$area[wdpa_apr$FYLKESNAVN == "Rogaland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Rogaland"]*1e-06)*100), # 2.1562136  
  (sum(wdpa_apr$area[wdpa_apr$FYLKESNAVN == "Vestland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Vestland"]*1e-06)*100), # 0.9253383  
  (sum(wdpa_apr$area[wdpa_apr$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]*1e-06)*100), # 2.3766661  
  (sum(wdpa_apr$area[wdpa_apr$FYLKESNAVN == "Agder"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Agder"]*1e-06)*100), # 10.77184 
  (sum(wdpa_apr$area[wdpa_apr$FYLKESNAVN == "Akershus"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Akershus"]*1e-06)*100), # 2.5761293 
  (sum(wdpa_apr$area[wdpa_apr$FYLKESNAVN == "Telemark"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Telemark"]*1e-06)*100), # 0.2093967
  (sum(wdpa_apr$area[wdpa_apr$FYLKESNAVN == "Vestfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Vestfold"]*1e-06)*100), # 0.368252 
  (sum(wdpa_apr$area[wdpa_apr$FYLKESNAVN == "Oslo"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Oslo"]*1e-06)*100), # 7.818589
  (sum(wdpa_apr$area[wdpa_apr$FYLKESNAVN == "Buskerud"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Buskerud"]*1e-06)*100) # 6.121036
)
print(wdpa_apr_ratios)

# Make output into percentages
wdpa_percent <- c(4.7017656, 37.5175125,  2.2904810,  2.5926527,0.4752846,  2.1562136,  0.9253383,  2.3766661,10.7718386 , 2.5761293 , 0.2093967  ,0.3682520,7.8185892,  6.1210359)
wdpa_percent <- paste0(round(wdpa_percent, 2), "%")
print(wdpa_percent)

# Determine the number of unique levels in the IUCN_CAT variable
num_levels <- nlevels(factor(wdpa_apr$IUCN_CAT))
# Generate colors from the Viridis palette, adding one extra color
colors <- viridis_pal(num_levels + 1)(num_levels)
# Create the plot
ggplot() +
  geom_sf(data = shp2) +
  geom_sf(data = wdpa_apr, aes(color = IUCN_CAT), size = 5) +
  scale_color_manual(values = colors) +  # Set colors manually
  guides(color = guide_legend(override.aes = list(alpha = 1))) +
  theme_bw()

# Read the shp made in ArcGIS Pro to an sf object - SVO (https://kartkatalog.miljodirektoratet.no/Dataset/Details/702)
svo <- st_read("C:/Users/gngia/OneDrive/Documents/new obis/svo.shp", stringsAsFactors=FALSE)
svo <- st_transform(svo, crs = "EPSG:4326")
print(svo1 <- st_crs(svo)) # area is in sq km

unique(svo$FYLKESNAVN)

# Find the sums of all areas of SVO per county
# Use the sum of municipality areas summed for each county = sum_areas from above
# Calculate the proportion of SVO per county relative to the total area of each county water
svo_ratios <- c(
  (sum(svo$area[svo$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]*1e-06)*100), # 73.4780405 
  (sum(svo$area[svo$FYLKESNAVN == "\u00D8stfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\u00D8stfold"]*1e-06)*100), # 63.3842406   
  (sum(svo$area[svo$FYLKESNAVN == "\"Troms - Romsa - Tromssa\"" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Troms - Romsa - Tromssa\""]*1e-06)*100), # 58.7215246   
  (sum(svo$area[svo$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\"" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\""]*1e-06)*100), # 68.4876118   
  (sum(svo$area[svo$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]*1e-06)*100), # 53.5008102
  (sum(svo$area[svo$FYLKESNAVN == "Rogaland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Rogaland"]*1e-06)*100), # 33.7564396   
  (sum(svo$area[svo$FYLKESNAVN == "Vestland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Vestland"]*1e-06)*100), # 18.2648541   
  (sum(svo$area[svo$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]*1e-06)*100), # 41.5677366   
  (sum(svo$area[svo$FYLKESNAVN == "Agder"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Agder"]*1e-06)*100), # 22.2974374   
  (sum(svo$area[svo$FYLKESNAVN == "Telemark"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Telemark"]*1e-06)*100), # 0.1925922
  (sum(svo$area[svo$FYLKESNAVN == "Vestfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Vestfold"]*1e-06)*100) # 53.6597639 
)
print(svo_ratios)

# Make output into percentages
svo_percent <- c(73.4780405, 63.3842406, 58.7215246, 68.4876118,53.5008102, 33.7564396, 18.2648541 ,41.5677366, 22.2974374  ,0.1925922, 53.6597639)
svo_percent <- paste0(round(svo_percent, 2), "%")
print(svo_percent)

# Read the shp made in ArcGIS Pro to an sf object - OSPAR Interactive Map Tool data (https://carto.mpa.ospar.org/en/1/ospar.map)
carto_mpa <- st_read("C:/Users/gngia/OneDrive/Documents/new obis/carto_mpa.shp", stringsAsFactors=FALSE)
carto_mpa <- st_transform(carto_mpa, crs = "EPSG:4326")
print(carto_mpa1 <- st_crs(carto_mpa)) # area is in sq km

unique(carto_mpa$FYLKESNAVN)

# Find the sums of all areas of MPAs per county
# Use the sum of municipality areas summed for each county = sum_areas from above
# Calculate the proportion of MPAs per county relative to the total area of each county water
carto_mpa_ratios <- c(
  (sum(carto_mpa$area[carto_mpa$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]*1e-06)*100), # 0.3720752  
  (sum(carto_mpa$area[carto_mpa$FYLKESNAVN == "\u00D8stfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\u00D8stfold"]*1e-06)*100), # 35.9828636     
  (sum(carto_mpa$area[carto_mpa$FYLKESNAVN == "\"Troms - Romsa - Tromssa\"" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Troms - Romsa - Tromssa\""]*1e-06)*100), # 2.5794776     
  (sum(carto_mpa$area[carto_mpa$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\"" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\""]*1e-06)*100), # 0.6461315     
  (sum(carto_mpa$area[carto_mpa$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]*1e-06)*100), # 4.9742430
  (sum(carto_mpa$area[carto_mpa$FYLKESNAVN == "Rogaland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Rogaland"]*1e-06)*100), # 1.8524839     
  (sum(carto_mpa$area[carto_mpa$FYLKESNAVN == "Vestland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Vestland"]*1e-06)*100), # 0.3454916     
  (sum(carto_mpa$area[carto_mpa$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]*1e-06)*100), # 0.5081613     
  (sum(carto_mpa$area[carto_mpa$FYLKESNAVN == "Agder"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Agder"]*1e-06)*100), # 8.8395135    
  (sum(carto_mpa$area[carto_mpa$FYLKESNAVN == "Telemark"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Telemark"]*1e-06)*100), # 12.4346427
  (sum(carto_mpa$area[carto_mpa$FYLKESNAVN == "Vestfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Vestfold"]*1e-06)*100) # 17.4952050 
)
print(carto_mpa_ratios)

# Make output into percentages
carto_percent <- c(0.3720752 ,35.9828636, 2.5794776 , 0.6461315, 4.9742430 , 1.8524839,0.3454916  ,0.5081613, 8.8395135, 12.4346427,17.4952050)
carto_percent <- paste0(round(carto_percent, 2), "%")
print(carto_percent)


# Read the shp made in ArcGIS Pro to an sf object - ODIMS 2021 data (https://odims.ospar.org/en/submissions/ospar_mpa_2021_07/)
ospar_mpa <- st_read("C:/Users/gngia/OneDrive/Documents/new obis/ospar_mpa_new.shp", stringsAsFactors=FALSE)
ospar_mpa <- st_transform(ospar_mpa, crs = "EPSG:4326")
print(ospar_mpa1 <- st_crs(ospar_mpa)) # area is in sq km

unique(ospar_mpa$FYLKESNAVN)

# Find the sums of all areas of MPAs per county
# Use the sum of municipality areas summed for each county = sum_areas from above
# Calculate the proportion of MPAs per county relative to the total area of each county water
ospar_mpa_ratios <- c(
  (sum(ospar_mpa$area[ospar_mpa$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]*1e-06)*100), # 0.37207520    
  (sum(ospar_mpa$area[ospar_mpa$FYLKESNAVN == "\u00D8stfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\u00D8stfold"]*1e-06)*100), # 35.98286348        
  (sum(ospar_mpa$area[ospar_mpa$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\"" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\""]*1e-06)*100), # 0.05034488        
  (sum(ospar_mpa$area[ospar_mpa$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]*1e-06)*100), # 0.01431218  
  (sum(ospar_mpa$area[ospar_mpa$FYLKESNAVN == "Rogaland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Rogaland"]*1e-06)*100), # 1.85248395      
  (sum(ospar_mpa$area[ospar_mpa$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]*1e-06)*100), # 0.40943903        
  (sum(ospar_mpa$area[ospar_mpa$FYLKESNAVN == "Agder"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Agder"]*1e-06)*100), # 8.83951350       
  (sum(ospar_mpa$area[ospar_mpa$FYLKESNAVN == "Telemark"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Telemark"]*1e-06)*100), # 12.43464272 
  (sum(ospar_mpa$area[ospar_mpa$FYLKESNAVN == "Vestfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Vestfold"]*1e-06)*100) # 17.49520502 
)
print(ospar_mpa_ratios)

# Make output into percentages
ospar_percent <- c(0.37207520 ,35.98286348, 0.05034488 , 0.01431218,1.85248395 , 0.40943903, 8.83951350, 12.43464272, 17.49520502)
ospar_percent <- paste0(round(ospar_percent, 2), "%")
print(ospar_percent)

# Read the shp made in ArcGIS Pro to an sf object - Naturvernområder (https://karteksport.miljodirektoratet.no/)
naturvernomr <- st_read("C:/Users/gngia/OneDrive/Documents/new obis/naturvernomr.shp", stringsAsFactors=FALSE)
naturvernomr <- st_transform(naturvernomr, crs = "EPSG:4326")
print(naturvernomr1 <- st_crs(naturvernomr)) # area is in sq km

#Changing column names that did not translate to the encoding properly
names(naturvernomr)[names(naturvernomr) == "skj.U.00F8.tselp"] <- "skj\u00F8tselplan"
names(naturvernomr)[names(naturvernomr) == "f.U.00F8.rstegan"] <- "f\u00F8rstegangVernet"

unique(naturvernomr$FYLKESNAVN)

# Find the sums of all areas of nature conservation areas per county
# Use the sum of municipality areas summed for each county = sum_areas from above
# Calculate the proportion of nature conservation per county relative to the total area of each county water
naturvernomr_ratios <- c(
  (sum(naturvernomr$area[naturvernomr$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"M\u00F8re og Romsdal\""]*1e-06)*100), # 4.716314 
  (sum(naturvernomr$area[naturvernomr$FYLKESNAVN == "\u00D8stfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\u00D8stfold"]*1e-06)*100), # 43.947853    
  (sum(naturvernomr$area[naturvernomr$FYLKESNAVN == "\"Troms - Romsa - Tromssa\"" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Troms - Romsa - Tromssa\""]*1e-06)*100), # 5.008229    
  (sum(naturvernomr$area[naturvernomr$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\"" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\""]*1e-06)*100), # 3.498783    
  (sum(naturvernomr$area[naturvernomr$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Finnmark - Finnm\u00E1rku - Finmarkku\""]*1e-06)*100), # 5.566015  
  (sum(naturvernomr$area[naturvernomr$FYLKESNAVN == "Rogaland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Rogaland"]*1e-06)*100), # 5.431686  
  (sum(naturvernomr$area[naturvernomr$FYLKESNAVN == "Vestland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Vestland"]*1e-06)*100), # 1.631439    
  (sum(naturvernomr$area[naturvernomr$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Tr\u00F8ndelag - Tr\u00F6\u00F6ndelage\""]*1e-06)*100), # 6.079442   
  (sum(naturvernomr$area[naturvernomr$FYLKESNAVN == "Agder"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Agder"]*1e-06)*100), # 10.951922   
  (sum(naturvernomr$area[naturvernomr$FYLKESNAVN == "Akershus"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Akershus"]*1e-06)*100), # 1.012029  
  (sum(naturvernomr$area[naturvernomr$FYLKESNAVN == "Telemark"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Telemark"]*1e-06)*100), # 12.579167 
  (sum(naturvernomr$area[naturvernomr$FYLKESNAVN == "Vestfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Vestfold"]*1e-06)*100), # 18.159375 
  (sum(naturvernomr$area[naturvernomr$FYLKESNAVN == "Oslo"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Oslo"]*1e-06)*100), # 6.810401  
  (sum(naturvernomr$area[naturvernomr$FYLKESNAVN == "Buskerud"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Buskerud"]*1e-06)*100) # 6.121035
  )
print(naturvernomr_ratios)

# Make output into percentages
naturvern_percent <- c(4.716314, 43.947853, 5.008229 , 3.498783,5.566015,  5.431686, 1.631439 , 6.079442, 10.951922 , 1.012029, 12.579167, 18.159375, 6.810401 , 6.121035)
naturvern_percent <- paste0(round(naturvern_percent, 2), "%")
print(naturvern_percent)

# Read the shp made in ArcGIS Pro to an sf object - lobster conservation zones (https://open-data-fiskeridirektoratet-fiskeridir.hub.arcgis.com/datasets/d46c75e3832845eb8058c5c1c9f34847_9/explore?location=59.842953%2C14.398378%2C5.39)
lob_con <- st_read("C:/Users/gngia/OneDrive/Documents/new obis/hummer_fredningsoner.shp", stringsAsFactors=FALSE)
lob_con <- st_transform(lob_con, crs = "EPSG:4326")
print(lob_con1 <- st_crs(lob_con)) # area is in sq km

unique(lob_con$FYLKESNAVN)

# Find the sums of all areas of  lobster conservation zones per county
# Use the sum of municipality areas summed for each county = sum_areas from above
# Calculate the proportion of lobster conservation per county relative to the total area of each county water
lob_con_ratios <- c(
  (sum(lob_con$area[lob_con$FYLKESNAVN == "Agder"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Agder"]*1e-06)*100), # 0.05057133   
  (sum(lob_con$area[lob_con$FYLKESNAVN == "Akershus"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Akershus"]*1e-06)*100), # 0.05057133     
  (sum(lob_con$area[lob_con$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\"" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\"Nordland - Nordl\u00E1nnda\""]*1e-06)*100), # 0.85877814
  (sum(lob_con$area[lob_con$FYLKESNAVN == "Oslo" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Oslo"]*1e-06)*100), # 0.85877814      
  (sum(lob_con$area[lob_con$FYLKESNAVN == "Rogaland"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Rogaland"]*1e-06)*100), # 1.53905531   
  (sum(lob_con$area[lob_con$FYLKESNAVN == "Telemark"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Telemark"]*1e-06)*100), # 3.82138631     
  (sum(lob_con$area[lob_con$FYLKESNAVN == "Vestfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Vestfold"]*1e-06)*100), # 0.03360105 
  (sum(lob_con$area[lob_con$FYLKESNAVN == "Vestland" ]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "Vestland"]*1e-06)*100), # 0.85877814      
  (sum(lob_con$area[lob_con$FYLKESNAVN == "\u00D8stfold"]) / (sum_areas$Total_Shape_Area[sum_areas$FYLKESNAVN == "\u00D8stfold"]*1e-06)*100) # 1.67994723      
)
print(lob_con_ratios)

# Make output into percentages
lob_con_percent <- c(0.07721415,  3.08883530,  0.00864787, 28.67519468 , 0.49820126,  0.35300533, 1.37768073 , 0.07832196  ,2.22179824)
lob_con_percent <- paste0(round(lob_con_percent, 2), "%")
print(lob_con_percent)

# Read the shp made in ArcGIS Pro to an sf object - habitat types (https://karteksport.miljodirektoratet.no/)
naturtyper <- st_read("C:/Users/gngia/OneDrive/Documents/new obis/GIS/habitat_types.shp", stringsAsFactors=FALSE)
naturtyper <- st_transform(naturtyper, crs = "EPSG:4326")
print(naturtyper1 <- st_crs(naturtyper)) # area is in sq km

# Rename columns with special characters correctly
names(naturtyper)[names(naturtyper) == "n.U.00F8.yaktigh"] <- "nøyaktighetsklasse"

#Check for invalid geometries
invalid_geometries <- sum(!st_is_valid(naturtyper))
print(paste("Number of invalid geometries:", invalid_geometries))

# Fix invalid geometries
naturtyper <- st_make_valid(naturtyper)

# Re-check for invalid geometries
invalid_geometries_after <- sum(!st_is_valid(naturtyper))
print(paste("Number of invalid geometries after fix:", invalid_geometries_after))

# Group by county and habitat type, then summarize the total area for each habitat type within each county
habitat_types <- naturtyper %>%
  group_by(FYLKESNAVN, naturtype) %>%
  summarize(total_area = sum(area_natur, na.rm = TRUE), .groups = 'drop') %>%
  arrange(FYLKESNAVN, naturtype)

# View the result
View(habitat_types)

# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% DEPTH

map_occ_joined_clip3 <- map_occ_joined_clip1 %>%
  group_by(FYLKESNAVN, originalScientificName, depth, phylum, class, ) %>%
  summarize(occurrences = n())
View(map_occ_joined_clip3)

intersect4 <- st_intersection(map_occ_joined_clip3, shp2)
View(intersect4)

# Combine species and depth data into a single data frame
combined_data <- data.frame(Phylum = intersect4$phylum, Depth = intersect4$depth)

# Remove rows with NA values
#combined_data <- na.omit(combined_data)

# Check if there is any valid data to plot
if (nrow(combined_data) > 0) {
  # Create the scatter plot
  ggplot(data = combined_data, aes(x = Phylum, y = Depth)) +
    geom_point() +
    labs(title = "Scatter Plot of Depth Data by Phylum",
         x = "Phylum",
         y = "Depth (m)") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  # Rotate x-axis labels for better readability
    scale_x_discrete(position = "top") +  # Move x-axis to the top
    scale_y_reverse()  # Reverse the y-axis direction
} else {
  print("No valid data to plot.")
}

# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% YEAR

sum(is.na(intersect3$year))

create_intervals <- function(year) {
  if (is.na(year)) {
    return(NA)
  } else if (year >= 2021 & year <= 2024) {
    return("2021-2024")
  } else if (year >= 2011 & year <= 2020) {
    return("2011-2020")
  } else if (year >= 2000 & year <= 2010) {
    return("2000-2010")
  } else if (year >= 1990 & year <= 1999) {
    return("1990-1999")
  } else if (year >= 1980 & year <= 1989) {
    return("1980-1989")
  } else if (year >= 1970 & year <= 1979) {
    return("1970-1979")
  } else {
    return("Before 1970")
  }
}

# Apply the function to create a new column for intervals
intersect3$Interval <- sapply(intersect3$year, create_intervals)

# Remove rows with NA values
year_data <- intersect3 %>%
  filter(!is.na(year)) %>%
  group_by(Interval) %>%
  summarise(count = n())

# Check if there is any valid data to plot
if (nrow(year_data) > 0) {
  # Create the bar plot
  ggplot(data = year_data, aes(x = Interval, y = count)) +
    geom_bar(stat = "identity", fill = "darkolivegreen4", color = "black") +
    geom_text(aes(label = count), vjust = -0.5, color = "black") +  # Add counts on top of the bars
    labs(title = "Species Occurrences by Time Interval",
         x = "Time Interval",
         y = "Number of Occurrences") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 90, hjust = 1)) +  # Rotate x-axis labels for better readability
    scale_x_discrete(position = "bottom")  # Move x-axis to the top
} else {
  print("No valid data to plot.")
}

sum(year_data$count)

# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Basis of observation

unique(intersect3$basisOfRecord)

bor_d <- intersect3$basisOfRecord

sum_bor <- (sum(intersect3$basisOfRecord == "HumanObservation") + 
    sum(intersect3$basisOfRecord == "PreservedSpecimen") +
    sum(intersect3$basisOfRecord == "Occurrence") + 
    sum(intersect3$basisOfRecord == "LivingSpecimen") +
      sum(intersect3$basisOfRecord == "MaterialSample") +
      sum(intersect3$basisOfRecord == "MachineObservation"))

(sum(intersect3$basisOfRecord == "HumanObservation")/ sum_bor) * 100
(sum(intersect3$basisOfRecord == "PreservedSpecimen")/ sum_bor) * 100
(sum(intersect3$basisOfRecord == "Occurrence")/ sum_bor) * 100
(sum(intersect3$basisOfRecord == "LivingSpecimen")/ sum_bor) * 100
(sum(intersect3$basisOfRecord == "MaterialSample")/ sum_bor) * 100
(sum(intersect3$basisOfRecord == "MachineObservation")/ sum_bor) * 100
